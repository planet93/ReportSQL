
@{
    ViewBag.Title = "Spend";
}

<div >
    <div id="layoutSidenav">

        <div id="layoutSidenav_nav" class="spend-first">
            @*<ul>
                <li v-for="item in treeData">
                    <div class="title-spend">
                        <span v-show="!item.isOpen" class="material-icons my-icon">chevron_right</span>
                        <span v-show="item.isOpen" class="material-icons my-icon">expand_more</span>
                        <div @@click="toggleSpend(item)" v-bind:class="{'li-bold':item.isFolder, 'title-open':item.isOpen}">
                            {{item.name}}
                        </div>
                    </div>                    
                    <ul v-show="item.isOpen" v-if="item.isFolder">
                        <li v-for="item2 in item.children">
                            <div class="title-spend">
                                <span v-show="!item2.isOpen" class="material-icons my-icon">chevron_right</span>
                                <span v-show="item2.isOpen" class="material-icons my-icon">expand_more</span>
                                <div v-bind:class="[boldClass]"
                                     @@click="toggleSpend(item2)">

                                    {{item2.name}}
                                </div>
                            </div>
                            <ul v-show="item2.isOpen" v-if="item2.isFolder">
                                <li v-for="item3 in item2.children">
                                    <div @@click="toggleSpend(item3)">
                                        {{item3.name}}
                                    </div>

                                </li>
                            </ul>
                        </li>
                    </ul>
                </li>
            </ul>*@

            <ul class="pl-1">
                <li v-for="spend1 in spends">
                    <div @@click="toggleSpend(spend1)" class="font-size-treeview cursor-pointer spend1-title mt-1" v-bind:class="{'spend1-title-open':spend1.IsOpen}" >
                        <span v-show="!spend1.IsOpen" class="material-icons my-icon">chevron_right</span>
                        <span v-show="spend1.IsOpen" class="material-icons my-icon">expand_more</span>
                        <div class="bold-title" @*v-bind:class="{'li-bold':spend1.IsFolder, 'title-open':spend1.IsOpen}"*@>
                            {{spend1.Name}}
                        </div>
                    </div>

                    <ul v-show="spend1.IsOpen" class="nested">
                        <li v-for="spend2 in spend1.SubSpend" class="pl-2">
                            <div @@click="toggleSpend(spend2)" class="font-size-treeview cursor-pointer spend2-title mt-1" v-bind:class="{'spend2-title-open':spend2.IsOpen}">
                                <span v-show="!spend2.IsOpen" class="material-icons my-icon">chevron_right</span>
                                <span v-show="spend2.IsOpen" class="material-icons my-icon">expand_more</span>
                                <div style="font-weight:500">
                                    {{spend2.Name}}
                                </div>
                            </div>

                            <ul v-show="spend2.IsOpen" class="nested">
                                <li v-for="spend3 in spend2.SubSpend" class="pl-2">
                                    <div @@click="toggleSpend(spend3)" class="font-size-treeview cursor-pointer spend3-title mt-1" v-bind:class="{'spend3-title-open':spend3.IsOpen}">
                                        <span v-show="!spend3.IsOpen" class="material-icons my-icon">chevron_right</span>
                                        <span v-show="spend3.IsOpen" class="material-icons my-icon">expand_more</span>
                                        <div>
                                            {{spend3.Name}}
                                        </div>
                                    </div>

                                    <ul v-show="spend3.IsOpen" class="nested">
                                        <li v-for="spend4 in spend3.SubSpend" class="pl-2">
                                            <div @@click="toggleSpend(spend4)" class="font-size-treeview cursor-pointer spend4-title mt-1" v-bind:class="{'spend4-title-open':spend4.IsOpen}">
                                                <span @*v-show="!spend4.IsOpen"*@ class="material-icons my-icon">chevron_right</span>
                                                @*<span v-show="spend4.IsOpen" class="material-icons my-icon">expand_more</span>*@
                                                <div>
                                                    {{spend4.Name}}
                                                </div>
                                            </div>
                                        </li>
                                    </ul>

                                </li>
                            </ul>

                        </li>

                    </ul>

                </li>
            </ul>

        </div>

        <div id="layoutSidenav_content" style="background-color:lightgrey">
            <div id="resize" class="resize-var1"></div>
            <main>
                <div class="container-fluid">                    
                    <h1 class="mt-4">Dashboard</h1>
                </div>
            </main>
        </div>

    </div>
</div>



@section scripts{
    <script type="text/javascript">

        var testApp = new Vue({
            el: "#globalSection",
            data: {
                title: "Test",
                boldClass: "li-bold",
                openClass: "title-open",

                spends: [],

            },
            methods: {
                toggleSpend(item) {
                    if (item.Level === 4) {
                        this.removeSelect();
                    }
                    item.IsOpen = !item.IsOpen;
                },
                removeSelect() {
                    for (let s1 = 0; s1 < this.spends.length; s1++) {

                        var spends2 = this.spends[s1].SubSpend;
                        if (spends2 != null) {
                            for (let s2 = 0; s2 < spends2.length; s2++) {

                                var spends3 = spends2[s2].SubSpend;
                                if (spends3 != null) {
                                    for (let s3 = 0; s3 < spends3.length; s3++) {

                                        var spends4 = spends3[s3].SubSpend;
                                        if (spends4 != null) {
                                            for (let s4 = 0; s4 < spends4.length; s4++) {
                                                spends4[s4].IsOpen = false;
                                            }
                                        }
                                    }
                                    
                                }

                            }
                        }                     
                    }
                },
                loadSpend() {
                    axios.post("/Home/GetSpends", null).then(resp => {
                        console.log(resp.data);
                        this.spends = resp.data;
                    });
                }
            },
            mounted() {
                this.loadSpend();
                loader.hide();
            }
        });

        
        $(document).ready(function () {
            var p = $("#layoutSidenav_nav");
            var d = $("#layoutSidenav_content");
            var r = $("#resize");

            var nav_width = p.width()
            var overall_width = window.innerWidth;
            var unlock = false;

            $(document).mousemove(function (e) {
                var nav_change = nav_width + (e.clientX - nav_width);
                var content_change = overall_width - nav_change;

                if (unlock) {

                    if (nav_change > 200) {
                        p.css("width", nav_change);
                        d.css("width", content_change);
                    }
                    else {
                        p.css("width", 200);
                        d.css("width", overall_width);
                    }
                }
            });

            r.mousedown(function (e) {
                nav_width = p.width();
                unlock = true;
                r.css("background-color", "rgba(0, 0, 0, 0.2)");
            });

            $(document).mousedown(function (e) {
                if (unlock) {
                    e.preventDefault();
                }
            });

            $(document).mouseup(function (e) {
                unlock = false;
                r.css("background-color", "rgba(0, 0, 0, 0.1)");
            });
        });
    </script>
    }